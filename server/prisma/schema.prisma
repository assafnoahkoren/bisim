// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  files     File[]
}

enum Role {
  USER
  ADMIN
}

model File {
  id          String   @id @default(cuid())
  filename    String
  originalName String
  mimeType    String
  size        Int
  s3Key       String
  status      FileStatus @default(UPLOADED)
  extractedText String? @db.Text
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  questions   Question[]
}

enum FileStatus {
  UPLOADED
  PROCESSING
  COMPLETED
  FAILED
}

model Question {
  id          String   @id @default(cuid())
  title       String
  content     String   @db.Text
  context     String?  @db.Text // Initial data/information
  fileId      String
  file        File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  subQuestions SubQuestion[]
}

model SubQuestion {
  id          String   @id @default(cuid())
  content     String   @db.Text
  solution    String?  @db.Text
  hints       String[] // Array of hint strings
  order       Int
  questionId  String
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}